close all;
clear all;

% orthographic case

%-----
%%%   @autor: lucas sousa
%%%   @data:  02/10/2017
%%%   @email: lucasssousa10@gmail.com
%%%   @description: Ray-tracing com visÃ£o ortogrÃ¡fica e Lambert shadding
%-----

% objects 

objetos = {};

for i = 0 : 2
    for j = 0 : 2
%         quadradinhos([i i 0], [i+1 i 0], [i+1 i+1 0], [i i+1 0], [255 0 0])
        objetos = [objetos, quadradinhos([j,i,0],[j+1,i,0],[j+1,i+1,0],[j,i+1,0],[100*i,0,100*j])];
    end
%     q1 = quadradinhos([i i 0], [i+1 i 0], [i+1 i+1 0], [i i+1 0], [255 0 0]);
%     q2 = quadradinhos([i+1 i 0], [i+2 i 0], [i+2 i+1 0], [i+1 i+1 0], [255 0 0]);
%     q3 = quadradinhos([i+2 i 0], [i+3 i 0], [i+3 i+1 0], [i+2 i+1 0], [255 0 0]);
%     objetos = [objetos, q1, q2, q3];
end


% q1 = quadradinhos([1 1 0], [2 1 0], [2 2 0], [1 2 0], [255 0 0]);
% q2 = quadradinhos([0 0 0], [1 0 0], [1 1 0], [0 1 0], [0 255 0]);
% q3 = quadradinhos([0 1 0], [1 1 0], [1 2 0], [0 2 0], [0 0 255]);
% 
% q4 = quadradinhos([0 2 0], [1 2 0], [1 3 0], [0 3 0], [255 0 255]);
% q5 = quadradinhos([1 2 0], [2 2 0], [2 3 0], [1 3 0], [255 0 120]);
% q6 = quadradinhos([2 2 0], [3 2 0], [3 3 0], [2 3 0], [255 255 255]);



q3 = quadradinhos([0 0 0], [1 0 0], [1 0 1], [0 0 1], [0 0 255]);
q4 = quadradinhos([1 0 0], [1 0 0], [1 0 1], [0 0 1], [0 0 255]);

centroCu = centroCubo(objetos);


%image parameters
nx = 200;
ny = 200;

l = -5;
r = 5;
t = 5;
b = -5;

e  = [0 0 10];
ww = e/norm(e);
[uu vv] = buildBasis(ww);

image = zeros(ny, nx, 3);

for(i = 1 : nx)
    for(j = 1 : ny)
        
        u = l + ((r - l)*(i + 0.5))/nx;
        v = b + ((t - b)*(j + 0.5))/ny;
            
        origin = e + u * uu  + v * vv;
        direction = -ww;
        
        menorTT = inf;
        indMenor = -1;
        for(ob = 1 : size(objetos, 2))
        
            tt = dot((objetos{ob}.p1 - origin), objetos{ob}.normal) / dot(direction, objetos{ob}.normal);
            p = origin + tt * direction;
    
            aiDento = p(1) >= objetos{ob}.minX & p(1) <= objetos{ob}.maxX & p(2) >= objetos{ob}.minY & p(2) <= objetos{ob}.maxY & ...
                      p(3) >= objetos{ob}.minZ & p(3) <= objetos{ob}.maxZ;
            if(aiDento & menorTT > tt) 
                menorTT = tt;
                indMenor = ob;    
            end
        end
        
        if(indMenor ~= -1)
            image(i, j, 1) = objetos{indMenor}.rgb(1);
            image(i, j, 2) = objetos{indMenor}.rgb(2);
            image(i, j, 3) = objetos{indMenor}.rgb(3); 
        end
           
        
    end
end

figure, imshow(image);
imwrite(image, 'teste.png');




